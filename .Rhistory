AND c.name_0 = 'United States'")
drv <- dbDriver("PostgreSQL")
# Connecting to the database
con <- dbConnect(drv, dbname="final_project")
USA <- dbGetQuery(con, "SELECT lat, lon, depth FROM month_earthquake AS e, county AS c
WHERE st_within(e.wkb_geometry, c.geom)
AND c.name_0 = 'United States'")
USA
head(USA)
USA[[lat]]
USA(lat)
USA[lat]
USA[[1]]
USA[[1]][[1]]
head(USA)
USA[[2]][[1]]
typeof(USA)
for(i in USA)
{
for(j in USA)
{
USA[[i]][[j]]
}
}
USA[[1]][[1]]
for(i in USA)
{
for(j in USA)
{
USA[[1]][[1]]
}
}
for(i in USA)
{
for(j in USA)
{
USA[[2]][[1]]
}
}
for(i in USA)
{
for(j in USA)
{
cat(USA[[2]][[1]])
}
}
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
for(i in USA)
{
for(j in USA[[i]])
{
cat(USA[[i]][[j]])
}
}
USA[1]
head(USA[1])
head(USA[1][1])
head(USA[1][[1])
head(USA[1][[1]])
head(USA[[1]][1])
for(i in USA)
{
for(j in USA[[i]])
{
cat(USA[[i]][j])
}
}
for(i in USA)
{
for(j in USA[[i]])
{
cat(USA[[1]][[2]])
}
}
for(i in USA)
{
for(j in USA[[i]])
{
cat(USA[[2]][[2]])
}
}
USA[[1]][[1]]
USA[[2]][[2]]
for(i in USA)
{
for(j in USA[[i]])
{
USA[[2]][[2]]
}
}
for(i in USA[[i]])
{
for(j in USA[[i]][[j]])
{
USA[[2]][[2]]
}
}
typeof(USA[[1]])
typeof(USA[[1]][[1]])
typeof(USA[1])
USA[1][1]
head(USA[1][1])
head(USA[1][1][1])
head(USA[1][[1])
head(USA[1][[1]])
head(USA[1][[1]][[1]])
head(USA)
test = sapply(USA, extractElement)
test = sapply(USA, extractElement())
extractElement <- function(a)
{
return(c(a[1],a[2],a[3]))
}
test = sapply(USA, extractElement
)
head(test)
typeof(test)
head(test)
head(test[[1]])
head(test[[2]])
head(test[[1]][[3]])
head(test[[1]][[2]])
head(test[1,2)
head(test[1,2])
head(test[1,3])
head(test[2,3])
head(test)
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
for (i in seq_along(test)) {
out <- c(test[i,1],test[i,2],test[i,3])
}
head(test)
extractElement <- function(a)
{
output$text1 <- renderText({
paste("I am in the for loop!")
})
return(c(a[1],a[2],a[3]))
}
test2 <- extractElement(USA)
for (i in seq_along(test2)) {
out <- c(test2[i,1],test2[i,2],test2[i,3])
}
test2 <- extractElement(USA)
extractElement <- function(a)
{
#       output$text1 <- renderText({
#         paste("I am in the for loop!")
#       })
return(c(a[1],a[2],a[3]))
}
test2 <- extractElement(USA)
for (i in seq_along(test2)) {
out <- c(test2[i,1],test2[i,2],test2[i,3])
}
head(test2)
typeof(test2)
head(test2)
extractElement <- function(a)
{
#       output$text1 <- renderText({
#         paste("I am in the for loop!")
#       })
return(c(a[1],a[2],a[3]))
}
extracted <- extractElement(USA)
head(extracted)
head(USA)
typeof(USA)
test2 <- sapply(USA,extractElement)
head(test2)
for (i in seq_along(test2)) {
out <- c(test2[i,1],test2[i,2],test2[i,3])
}
test2
head(YSA)
head(USA)
USA[1]
USA[[1]]
head(USA)
head(USA[[1]])
head(USA[1])
head(USA[,1])
head(USA[1,])
extractElement <- function(a)
{
#       output$text1 <- renderText({
#         paste("I am in the for loop!")
#       })
return(c(a[1,],a[2,],a[3,]))
}
test2 <- sapply(USA,extractElement)
head(USA)
USA[[1]]
head(USA[[1]])
head(USA[[1,]])
head(USA[1,])
head(USA[2,])
for (i in seq_along(USA)) {
out <- c(USA[i,],USA[i,],USA[i,])
}
for (i in seq_along(USA)) {
out <- c(USA[i,],USA[i,],USA[i,])
}
out
head(out)
out
tail(USA)
typeof(out)
out
head(USA)
for (i in seq_length(6904)) {
out <- c(USA[i,],USA[i,],USA[i,])
}
for (i in seq_len(6904)) {
out <- c(USA[i,],USA[i,],USA[i,])
}
out
tail(USA)
out
for (i in seq_len(6904)) {
out <- USA[i,])
}
for (i in seq_len(6904)) {
out <- USA[i,]
}
out
for (i in seq_len(6904)) {
circleMaker(USA[i,])
}
for (i in seq_len(6904)) {
circleMarker(USA[i,])
}
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
USA[1,]
USA <- dbGetQuery(con, "SELECT lat, lon, ids FROM month_earthquake AS e, county AS c
WHERE st_within(e.wkb_geometry, c.geom)
AND c.name_0 = 'United States'")
# Initializing the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# Connecting to the database
con <- dbConnect(drv, dbname="final_project")
USA <- dbGetQuery(con, "SELECT lat, lon, ids FROM month_earthquake AS e, county AS c
WHERE st_within(e.wkb_geometry, c.geom)
AND c.name_0 = 'United States'")
timsVector <- USA[1,]
timsV
timsVector
timsVector[1]
timsVector[2]
timsVector[3]
typeof(timsVector[1])
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
timsVector[1]
timsVector[2]
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
head(USAQuery)
countCountries <- dbGetQuery(con, "SELECT count(*) FROM countries")[[1]]
id <- "us10001rqc"
countCountries <- dbGetQuery(con, paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'")
countCountries <- dbGetQuery(con, paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'")
countCountries <- dbGetQuery(con, paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'"))
infoPopup <- dbGetQuery(con, paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'"))
paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'")
paste("select mag, depth, ids from month_earthquake where ids = '", id, "'")
infoPopup <- dbGetQuery(con, paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'", sep = ""))
paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'", sep = "")
paste("select mag, depth, ids from month_earthquake where ids = '", id, "'", sep = "")
infoPopup <- dbGetQuery(con, paste("select mag, depth,", "ids", "from month_earthquake
, sep = ""))
infoPopup <- dbGetQuery(con, paste("select mag, depth,", "ids", "from month_earthquake", sep = ""))
paste("select mag, depth,", "ids", "from month_earthquake", sep = "")
infoPopup <- dbGetQuery(con, paste("select mag, depth,", " ids ", "from month_earthquake", sep = ""))
paste("select mag, depth,", " ids ", "from month_earthquake", sep = "")
infoPopup <- dbGetQuery(con, query)
dbGetQuery
dbGetQuery(con, "select mag, depth, ids from month_earthquake")
info <- dbGetQuery(con, "select mag, depth, ids from month_earthquake")
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
timsVector <- USAQuery[i,]
timsVector <- USAQuery[1,]
seq_len(6904)
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
head(timsVector)
head(timsVector[5])
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
query <- paste("SELECT mag, depth, ids, place FROM month_earthquake WHERE ids = '", id, "'", sep = "")
query[4]
query[3]
infoPopup <- dbGetQuery(con, query)
# Initializing the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# Connecting to the database
con <- dbConnect(drv, dbname="final_project")
infoPopup <- dbGetQuery(con, query)
infoPopup[3]
infoPopup[4]
gsub("^.*?_","of ",infoPopup[4])
gsub("^.*?_","f",infoPopup[4])
s1 = unlist(strsplit(infoPopup[4], split='of ', fixed=TRUE))[2]
s1 = unlist(strsplit(infoPopup[4], split='of ', fixed=TRUE))
s1 = unlist(strsplit(infoPopup[4], split='of ', fixed=TRUE))[1]
s1 = as.character(unlist(strsplit(infoPopup[4], split='of ', fixed=TRUE)))
s1 = unlist(strsplit(as.character(infoPopup[4]), split='of ', fixed=TRUE))[1]
s1
query <- paste("SELECT mag, depth, ids, place FROM month_earthquake WHERE ids = '", id, "'", sep = "")
infoPopup <- dbGetQuery(con, query)
infoPopup[4]
s1 = unlist(strsplit(as.character(infoPopup[4]), split='of ', fixed=TRUE))[2]
s1
infoPopup
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
magQuery <- paste("SELECT mag, depth, ids, place FROM month_earthquake, county
WHERE mag BETWEEN ", magRange[1], " AND ", magRange[2],
"AND st_within(month_earthquake.wkb_geometry, county.geom)
AND county.name_0 = '", input$select, "'", sep = "")
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
USAQuery <- dbGetQuery(con, "SELECT USAlon as lon, USAlat as lat, USAdepth as depth, mag, ids, count(*)
FROM month_earthquake
WHERE USAlon IS NOT NULL")
# Initializing the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# Connecting to the database
con <- dbConnect(drv, dbname="final_project")
USAQuery <- dbGetQuery(con, "SELECT USAlon as lon, USAlat as lat, USAdepth as depth, mag, ids, count(*)
FROM month_earthquake
WHERE USAlon IS NOT NULL")
magUSACount <- dbGetQuery(con, paste("SELECT count(*) FROM month_earthquake WHERE mag BETWEEN ",
magRange[1], " AND ", magRange[2], " AND usalat IS NOT NULL", sep = ""))
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
USAQuery <- dbGetQuery(con, "SELECT USAlon as lon, USAlat as lat, USAdepth as depth, mag, ids, count(*)
FROM month_earthquake
WHERE USAlon IS NOT NULL
AND mag BETWEEN ", 4, " AND ", 5, sep = "")
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
install.packages("dygraphs")
as.POSIXct(1428444614430/1000, origin="1970-01-01")
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
USAFunction(magRange[1], magRange[2])
USAFunction
USAQuery
USAFunction(3, 4)
USAQuery
min = 3
max = 4
USAQuery <- dbGetQuery(con, paste("SELECT USAlon as lon, USAlat as lat, USAdepth as depth, mag, ids
FROM month_earthquake
WHERE USAlon IS NOT NULL
AND mag BETWEEN ", min, " AND ", max, sep = ""))
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
drv <- dbDriver("PostgreSQL")
# Connecting to the database
con <- dbConnect(drv, dbname="final_project")
selCountryQuery <<- dbGetQuery(con, paste("SELECT lat, lon, depth, mag, place
FROM month_earthquake, countries
WHERE st_within(ST_GeomFromEWKB(month_earthquake.wkb_geometry),
countries.geom)
and countries.name LIKE 'Spain'"))
selCountryQuery
selCountryQuery[,]
selCountryQuery[,1]
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
newView <- dbGetQuery(con, paste("SELECT lat, lon FROM country_centroid WHERE name = 'Spain'", sep = "")
newView <- dbGetQuery(con, paste("SELECT lat, lon FROM country_centroid WHERE name = 'Spain'")
newView <- dbGetQuery(con, paste("SELECT lat, lon FROM country_centroid WHERE name = 'Spain'")
newView <- dbGetQuery(con, paste("SELECT lat, lon FROM country_centroid WHERE name = 'Spain'")
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
countryQuery <- otherCountry(magRange[1], magRange[2], selectedCountry)
countryQuery
info
usaQuery
USAQuery <<- dbGetQuery(con, paste("SELECT USAlon as lon, USAlat as lat, USAdepth as depth, mag, ids
FROM month_earthquake
WHERE USAlon IS NOT NULL
AND mag BETWEEN ", min, " AND ", max, sep = ""))
con <- dbConnect(drv, dbname="final_project")
USAQuery <<- dbGetQuery(con, paste("SELECT USAlon as lon, USAlat as lat, USAdepth as depth, mag, ids
FROM month_earthquake
WHERE USAlon IS NOT NULL
AND mag BETWEEN ", min, " AND ", max, sep = ""))
USAQuery
countryQuery[1,2]
seq_len(countryQuery[,1])
countryQuery
seq_len(length(countryQuery[,1]))
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')

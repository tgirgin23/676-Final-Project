col = "blue",
axes = FALSE,
xlab = NA, ylab = NA, ylim = c(6, 11), xlim = c(1, 12.5))
# c) Wind Direction
axis(3, at = seq(0, 24, by = 2) -1, labels = (seq(0,24,2)/2), col="blue", col.axis="blue")
plot(x = seq(1, 24),
y = t2, lty = 1, type = "l")
# Creating upper-axis
axis(3, at = seq(0, 24, by = 2) -1, labels = (seq(0,24,2)/2), col="blue", col.axis="blue")
#points(t3, lty = 1, type = "l")
# Text for the upper-axis
mtext(side = 3, line = 2.3, "Month of Year", col = "blue")
# Necessary to plot secondary axis over first plot
par(new = TRUE)
# Reason for 12.5 value in xlim is that we had to create an offset of 0.5 for the axis earlier
plot(t3,
type = "l",
lty = 5,
col = "blue",
axes = FALSE,
xlab = NA, ylab = NA, ylim = c(6, 11), xlim = c(1, 12.5))
# c) Wind Direction
par(mar = c(5,5,5,2)) #Add margins space around graph for upper-label
t2 <- tapply(Weather$WindSpeed, Weather$Hour, mean, na.rm=TRUE)
t3 <- tapply(Weather$WindSpeed, Weather$Month, mean, na.rm=TRUE)
plot(x = seq(1, 24),
y = t2, lty = 1,
type = "l",
ylab = "Wind Speed (mph)",
xlab = "Hour of Day")
# Creating upper-axis
axis(3, at = seq(0, 24, by = 2) -1, labels = (seq(0,24,2)/2), col="blue", col.axis="blue")
#points(t3, lty = 1, type = "l")
# Text for the upper-axis
mtext(side = 3, line = 2.3, "Month of Year", col = "blue")
# Necessary to plot secondary axis over first plot
par(new = TRUE)
# Reason for 12.5 value in xlim is that we had to create an offset of 0.5 for the axis earlier
plot(t3,
type = "l",
lty = 5,
col = "blue",
axes = FALSE,
xlab = NA, ylab = NA, ylim = c(6, 11), xlim = c(1, 12.5))
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
install.package("bigr")
install.packages("bigr")
rowapply
rowapply()
shiny::runGitHub("superzip", "jcheng5")
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
test
test[[Belgium]]
test[["Belgium"]]
test[["United States"]]
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
USA <- dbGetQuery(con, "SELECT place, name_1 FROM month_earthquake, county AS c
WHERE st_within(month_earthquake.wkb_geometry, c.geom)
AND c.name_0 = 'United States'")
USA <- dbGetQuery(con, "SELECT place, name_1 FROM month_earthquake, county AS c
WHERE st_within(month_earthquake.wkb_geometry, c.geom)
AND c.name_0 = 'United States'")
USA <- dbGetQuery(con, "SELECT place, name_1 FROM month_earthquake, county AS c WHERE st_within(month_earthquake.wkb_geometry, c.geom) AND c.name_0 = 'United States'")
USA <- dbGetQuery(con, "SELECT place, name_1 FROM month_earthquake, county AS c WHERE st_within(month_earthquake.wkb_geometry, c.geom) AND c.name_0 = 'United States'")
USA <- dbGetQuery(con, "SELECT ST_AsText(wkb_geometry) FROM month_earthquake AS e, county AS c
WHERE st_within(e.wkb_geometry, c.geom)
AND c.name_0 = 'United States'")
drv <- dbDriver("PostgreSQL")
# Connecting to the database
con <- dbConnect(drv, dbname="final_project")
USA <- dbGetQuery(con, "SELECT ST_AsText(wkb_geometry) FROM month_earthquake AS e, county AS c
WHERE st_within(e.wkb_geometry, c.geom)
AND c.name_0 = 'United States'")
USA
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
dbDisconnect(con)
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
dbUnloadDriver(drv)
dbDisconnect(con)
dbUnloadDriver(drv)
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
USA
USA[[1]]
USA[[1]][[1]]
typeof(USA[[1]][[1]])
typeof(lat[[1]][[1]])
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
USA
USA <- dbGetQuery(con, "SELECT lat, lon, depth FROM month_earthquake AS e, county AS c
WHERE st_within(e.wkb_geometry, c.geom)
AND c.name_0 = 'United States'")
drv <- dbDriver("PostgreSQL")
# Connecting to the database
con <- dbConnect(drv, dbname="final_project")
USA <- dbGetQuery(con, "SELECT lat, lon, depth FROM month_earthquake AS e, county AS c
WHERE st_within(e.wkb_geometry, c.geom)
AND c.name_0 = 'United States'")
USA
head(USA)
USA[[lat]]
USA(lat)
USA[lat]
USA[[1]]
USA[[1]][[1]]
head(USA)
USA[[2]][[1]]
typeof(USA)
for(i in USA)
{
for(j in USA)
{
USA[[i]][[j]]
}
}
USA[[1]][[1]]
for(i in USA)
{
for(j in USA)
{
USA[[1]][[1]]
}
}
for(i in USA)
{
for(j in USA)
{
USA[[2]][[1]]
}
}
for(i in USA)
{
for(j in USA)
{
cat(USA[[2]][[1]])
}
}
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
for(i in USA)
{
for(j in USA[[i]])
{
cat(USA[[i]][[j]])
}
}
USA[1]
head(USA[1])
head(USA[1][1])
head(USA[1][[1])
head(USA[1][[1]])
head(USA[[1]][1])
for(i in USA)
{
for(j in USA[[i]])
{
cat(USA[[i]][j])
}
}
for(i in USA)
{
for(j in USA[[i]])
{
cat(USA[[1]][[2]])
}
}
for(i in USA)
{
for(j in USA[[i]])
{
cat(USA[[2]][[2]])
}
}
USA[[1]][[1]]
USA[[2]][[2]]
for(i in USA)
{
for(j in USA[[i]])
{
USA[[2]][[2]]
}
}
for(i in USA[[i]])
{
for(j in USA[[i]][[j]])
{
USA[[2]][[2]]
}
}
typeof(USA[[1]])
typeof(USA[[1]][[1]])
typeof(USA[1])
USA[1][1]
head(USA[1][1])
head(USA[1][1][1])
head(USA[1][[1])
head(USA[1][[1]])
head(USA[1][[1]][[1]])
head(USA)
test = sapply(USA, extractElement)
test = sapply(USA, extractElement())
extractElement <- function(a)
{
return(c(a[1],a[2],a[3]))
}
test = sapply(USA, extractElement
)
head(test)
typeof(test)
head(test)
head(test[[1]])
head(test[[2]])
head(test[[1]][[3]])
head(test[[1]][[2]])
head(test[1,2)
head(test[1,2])
head(test[1,3])
head(test[2,3])
head(test)
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
for (i in seq_along(test)) {
out <- c(test[i,1],test[i,2],test[i,3])
}
head(test)
extractElement <- function(a)
{
output$text1 <- renderText({
paste("I am in the for loop!")
})
return(c(a[1],a[2],a[3]))
}
test2 <- extractElement(USA)
for (i in seq_along(test2)) {
out <- c(test2[i,1],test2[i,2],test2[i,3])
}
test2 <- extractElement(USA)
extractElement <- function(a)
{
#       output$text1 <- renderText({
#         paste("I am in the for loop!")
#       })
return(c(a[1],a[2],a[3]))
}
test2 <- extractElement(USA)
for (i in seq_along(test2)) {
out <- c(test2[i,1],test2[i,2],test2[i,3])
}
head(test2)
typeof(test2)
head(test2)
extractElement <- function(a)
{
#       output$text1 <- renderText({
#         paste("I am in the for loop!")
#       })
return(c(a[1],a[2],a[3]))
}
extracted <- extractElement(USA)
head(extracted)
head(USA)
typeof(USA)
test2 <- sapply(USA,extractElement)
head(test2)
for (i in seq_along(test2)) {
out <- c(test2[i,1],test2[i,2],test2[i,3])
}
test2
head(YSA)
head(USA)
USA[1]
USA[[1]]
head(USA)
head(USA[[1]])
head(USA[1])
head(USA[,1])
head(USA[1,])
extractElement <- function(a)
{
#       output$text1 <- renderText({
#         paste("I am in the for loop!")
#       })
return(c(a[1,],a[2,],a[3,]))
}
test2 <- sapply(USA,extractElement)
head(USA)
USA[[1]]
head(USA[[1]])
head(USA[[1,]])
head(USA[1,])
head(USA[2,])
for (i in seq_along(USA)) {
out <- c(USA[i,],USA[i,],USA[i,])
}
for (i in seq_along(USA)) {
out <- c(USA[i,],USA[i,],USA[i,])
}
out
head(out)
out
tail(USA)
typeof(out)
out
head(USA)
for (i in seq_length(6904)) {
out <- c(USA[i,],USA[i,],USA[i,])
}
for (i in seq_len(6904)) {
out <- c(USA[i,],USA[i,],USA[i,])
}
out
tail(USA)
out
for (i in seq_len(6904)) {
out <- USA[i,])
}
for (i in seq_len(6904)) {
out <- USA[i,]
}
out
for (i in seq_len(6904)) {
circleMaker(USA[i,])
}
for (i in seq_len(6904)) {
circleMarker(USA[i,])
}
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
USA[1,]
USA <- dbGetQuery(con, "SELECT lat, lon, ids FROM month_earthquake AS e, county AS c
WHERE st_within(e.wkb_geometry, c.geom)
AND c.name_0 = 'United States'")
# Initializing the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# Connecting to the database
con <- dbConnect(drv, dbname="final_project")
USA <- dbGetQuery(con, "SELECT lat, lon, ids FROM month_earthquake AS e, county AS c
WHERE st_within(e.wkb_geometry, c.geom)
AND c.name_0 = 'United States'")
timsVector <- USA[1,]
timsV
timsVector
timsVector[1]
timsVector[2]
timsVector[3]
typeof(timsVector[1])
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
timsVector[1]
timsVector[2]
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
head(USAQuery)
countCountries <- dbGetQuery(con, "SELECT count(*) FROM countries")[[1]]
id <- "us10001rqc"
countCountries <- dbGetQuery(con, paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'")
countCountries <- dbGetQuery(con, paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'")
countCountries <- dbGetQuery(con, paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'"))
infoPopup <- dbGetQuery(con, paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'"))
paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'")
paste("select mag, depth, ids from month_earthquake where ids = '", id, "'")
infoPopup <- dbGetQuery(con, paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'", sep = ""))
paste("select mag, depth, ids from month_earthquake
where ids = '", id, "'", sep = "")
paste("select mag, depth, ids from month_earthquake where ids = '", id, "'", sep = "")
infoPopup <- dbGetQuery(con, paste("select mag, depth,", "ids", "from month_earthquake
, sep = ""))
infoPopup <- dbGetQuery(con, paste("select mag, depth,", "ids", "from month_earthquake", sep = ""))
paste("select mag, depth,", "ids", "from month_earthquake", sep = "")
infoPopup <- dbGetQuery(con, paste("select mag, depth,", " ids ", "from month_earthquake", sep = ""))
paste("select mag, depth,", " ids ", "from month_earthquake", sep = "")
infoPopup <- dbGetQuery(con, query)
dbGetQuery
dbGetQuery(con, "select mag, depth, ids from month_earthquake")
info <- dbGetQuery(con, "select mag, depth, ids from month_earthquake")
query <- paste("select mag, depth,", " ids ", "from month_earthquake", sep = "")
infoPopup <- dbGetQuery(con, query)
drv <- dbDriver("PostgreSQL")
# Connecting to the database
con <- dbConnect(drv, dbname="final_project")
infoPopup <- dbGetQuery(con, query)
query <- paste("SELECT mag, depth, ids FROM month_earthquake WHERE ids = '", id, "'", sep = "")
infoPopup <- dbGetQuery(con, query)
infoPopup
infoPopup[1]
infoPopup[1][1]
shiny::runApp('Google Drive/Spring 2015/CS 368/Final_project')
